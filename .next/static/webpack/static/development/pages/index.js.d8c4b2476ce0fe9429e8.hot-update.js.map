{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.d8c4b2476ce0fe9429e8.hot-update.js","sources":["webpack:///./containers/common/nav.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport Link from 'next/link'\nimport { MENUITEMS } from '../../constant/menu';\nimport {Container,Row} from 'reactstrap'\nconst Nav = () => {\n    const [mainmenu, setMainMenu] = useState(MENUITEMS);\n    const [sidebar, setSidebar] = useState(false);\n\n    function closeSidebar() {\n        setSidebar(!sidebar)\n        document.querySelector('.navbar').classList.remove('openSidebar')\n    }\n\n    useEffect(() => {\n        const currentUrl = location.pathname;\n        mainmenu.filter(items => {\n            if (items.path === currentUrl)\n                setNavActive(items)\n            if (!items.children) return false\n            items.children.filter(subItems => {\n                if (subItems.path === currentUrl)\n                    setNavActive(subItems)\n                if (!subItems.children) return false\n                subItems.children.filter(subSubItems => {\n                    if (subSubItems.path === currentUrl)\n                        setNavActive(subSubItems)\n                })\n            })\n        })\n\n    }, [])\n\n    const setNavActive = (item) => {\n        MENUITEMS.filter(menuItem => {\n            if (menuItem != item)\n                menuItem.active = false\n            if (menuItem.children && menuItem.children.includes(item))\n                menuItem.active = true\n            if (menuItem.children) {\n                menuItem.children.filter(submenuItems => {\n                    if (submenuItems.children && submenuItems.children.includes(item)) {\n                        menuItem.active = true\n                        submenuItems.active = true\n                    }\n                })\n            }\n        })\n        item.active = !item.active\n        setMainMenu({ mainmenu: MENUITEMS })\n\n    }\n\n    // Click Toggle menu\n    const toggletNavActive = (item) => {\n\n        if (!item.active) {\n            MENUITEMS.forEach(a => {\n                if (MENUITEMS.includes(item))\n                    a.active = false\n                if (!a.children) return false\n                a.children.forEach(b => {\n                    if (a.children.includes(item)) {\n                        b.active = false\n                    }\n                    if (!b.children) return false\n                    b.children.forEach(c => {\n                        if (b.children.includes(item)) {\n                            c.active = false\n                        }\n                    })\n                })\n            });\n        }\n        item.active = !item.active\n        setMainMenu({ mainmenu: MENUITEMS })\n    }\n\n    return (\n        <div className={`navbar`} style={{justifyContent: 'end'}} id=\"togglebtn\">\n            <div className=\"responsive-btn\">\n                <a className=\"btn-back\" onClick={closeSidebar}>\n                    <h5>Cerrar</h5>\n                </a>\n            </div>\n            <ul className=\"main-menu\">\n                {\n                    MENUITEMS.slice(0, 3).map((menuItem, i) => {\n                        return (\n                            <li key={i} className={` ${menuItem.megaMenu ? 'mega-menu' : ''}`}>\n                                \n                                {(menuItem.sidebartitle) ?\n                                    <div className=\"dropdown\">{menuItem.sidebartitle}</div>\n                                    : ''}\n                                {(menuItem.type === 'sub') ?\n                                    <a className=\"dropdown\" href={menuItem.link} onClick={() => toggletNavActive(menuItem)}>\n                                        <span>{menuItem.title}</span>\n                                    </a>\n                                    : ''}\n                                {(menuItem.type === 'link') ?\n                                    <Link\n                                        href={`${process.env.PUBLIC_URL}${menuItem.path}`}\n                                        className={`${menuItem.active ? 'active' : ''}`}\n\n                                        onClick={() => toggletNavActive(menuItem)}\n                                    >\n                                        <span>{menuItem.title}</span>\n                                        {menuItem.children ?\n                                            <i className=\"fa fa-angle-right pull-right\"></i> : ''}\n                                    </Link>\n                                    : ''}\n\n                                {/* MEGHA MENU */}\n                                <div className={`mega-menu-container resize ${menuItem.active ? 'opensubmenu' : ''}`}>\n                                    {\n                                        menuItem.megaMenu === true\n                                            ?\n                                            <Container>\n                                                <Row>\n                                                    {\n                                                        (menuItem.children).map((megaMenuItem, i) => {\n                                                            return (\n                                                                <div className={`${menuItem.megaMenuType == 'mini' ? 'col-lg-6' : menuItem.megaMenuType == 'small' ? 'col-lg-4' : menuItem.megaMenuType == 'medium' ? 'col-lg-3' : menuItem.megaMenuType == 'large' ? 'col' : ''} `} key={i}>\n                                                                    <div className=\"menu-container\" >\n                                                                        <a className=\"menu-head\">{megaMenuItem.title}</a>\n                                                                        <ul className={`menu-icon ${megaMenuItem.title ? 'openSubChildMenu' : ''}`}>\n                                                                            {menuItem.title === 'Inicio' ?\n                                                                               \n                                                                                (megaMenuItem.children).map((subMegaMenuItem, i) => {\n                                                                                    return (\n                                                                                        <li key={i}>\n                                                                                            <a href={subMegaMenuItem.path}>\n                                                                                                <i className={`icon-${subMegaMenuItem.icon}`}></i>{subMegaMenuItem.title}</a>\n                                                                                        </li>\n                                                                                    )\n                                                                                }) :\n                                                                                (megaMenuItem.children).map((subMegaMenuItem, i) => {\n                                                                                    return (\n                                                                                        <li key={i}>\n                                                                                            <a href={subMegaMenuItem.path}>\n                                                                                                {subMegaMenuItem.title}\n                                                                                            </a>\n                                                                                        </li>\n                                                                                    )\n                                                                                })\n                                                                            }\n                                                                        </ul>\n                                                                    </div>\n                                                                </div>\n                                                            )\n                                                        })\n                                                    }\n                                                </Row>\n                                            </Container>\n                                            : ''}\n                                </div>\n                                {menuItem.children && !menuItem.megaMenu ?\n                                    <ul\n                                        className={`${menuItem.active ? 'menu-open activeSubmenu' : ''}`}\n                                        style={menuItem.active ? { opacity: 1, transition: 'opacity 500ms ease-in' } : {}}\n                                    >\n                                        {menuItem.children.map((childrenItem, index) =>\n                                            <li key={index} className={`${childrenItem.children ? 'sub-menu ' : ''}`}>\n                                                {(childrenItem.type === 'sub') ?\n                                                    <a href={menuItem.link} onClick={() => toggletNavActive(childrenItem)} >\n                                                        {childrenItem.title}\n                                                    </a>\n                                                    : ''}\n                                                {(childrenItem.type === 'link') ?\n                                                    <Link href={`${childrenItem.path}`}>\n                                                        <a>    {childrenItem.title} </a>\n                                                    </Link>\n                                                    : ''}\n                                                {childrenItem.children ?\n                                                    <ul className={`${childrenItem.active ? 'menu-open' : 'active'}`}>\n                                                        {childrenItem.children.map((childrenSubItem, key) =>\n                                                            <li key={key}>\n                                                                {(childrenSubItem.type === 'link') ?\n                                                                    <Link href={`${childrenSubItem.path}`} >\n                                                                        <a className=\"sub-menu-title\">{childrenSubItem.title}</a>\n                                                                    </Link>\n                                                                    : ''}\n                                                            </li>\n                                                        )}\n                                                    </ul>\n                                                    : ''}\n                                            </li>\n                                        )}\n                                    </ul>\n                                    : ''}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n            <ul className=\"main-menu\">\n                {\n                    MENUITEMS.slice(3, 7).map((menuItem, i) => {\n                        return (\n                            <li key={i} className={` ${menuItem.megaMenu ? 'mega-menu' : ''}`}>\n                              \n                                {(menuItem.sidebartitle) ?\n                                    <div className=\"dropdown\">{menuItem.sidebartitle}</div>\n                                    : ''}\n                                {(menuItem.type === 'sub') ?\n                                    <a className=\"dropdown\" href={menuItem.link} onClick={() => toggletNavActive(menuItem)}>\n                                        <span>{menuItem.title}</span>\n                                    </a>\n                                    : ''}\n                                {(menuItem.type === 'link') ?\n                                    <Link\n                                        href={`${process.env.PUBLIC_URL}${menuItem.path}`}\n                                        className={`${menuItem.active ? 'active' : ''}`}\n\n                                        onClick={() => toggletNavActive(menuItem)}\n                                    >\n                                        <span>{menuItem.title}</span>\n                                        {menuItem.children ?\n                                            <i className=\"fa fa-angle-right pull-right\"></i> : ''}\n                                    </Link>\n                                    : ''}\n\n                                {/* MEGHA MENU */}\n                                <div className={`mega-menu-container ${menuItem.title === 'Elements' ? 'resize' : ''} ${ menuItem.active ? 'opensubmenu activeSubmenu' : '' }`}>\n                                    {\n                                        menuItem.megaMenu === true\n                                            ?\n                                            <Container>\n                                                <Row>\n                                                    {\n                                                        (menuItem.children).map((megaMenuItem, i) => {\n                                                            return (\n                                                                <div className={`${menuItem.megaMenuType == 'small' ? 'col-lg-4' : menuItem.megaMenuType == 'medium' ? 'col-lg-3' : menuItem.megaMenuType == 'large' ? 'col' : ''} `} key={i}>\n                                                                    <div className=\"menu-container\" >\n                                                                        <a className=\"menu-head\">{megaMenuItem.title}</a>\n                                                                        <ul className={`menu-icon ${megaMenuItem.title ? 'openSubChildMenu' : ''}`}>\n                                                                            {menuItem.title === 'Elements' ?\n                                                                                \n                                                                                (megaMenuItem.children).map((subMegaMenuItem, i) => {\n                                                                                    return (\n                                                                                        <li key={i}>\n                                                                                            <a href={subMegaMenuItem.path}>\n                                                                                                <i className={`icon-${subMegaMenuItem.icon}`}></i>{subMegaMenuItem.title}</a>\n                                                                                        </li>\n                                                                                    )\n                                                                                }) :\n                                                                                (megaMenuItem.children).map((subMegaMenuItem, i) => {\n                                                                                    return (\n                                                                                        <li key={i}>\n                                                                                            <a href={subMegaMenuItem.path}>\n                                                                                                {subMegaMenuItem.title}\n                                                                                            </a>\n                                                                                        </li>\n                                                                                    )\n                                                                                })\n                                                                            }\n                                                                        </ul>\n                                                                    </div>\n                                                                </div>\n                                                            )\n                                                        })\n                                                    }\n                                                </Row>\n                                            </Container>\n                                            : ''}\n                                </div>\n                                {menuItem.children && !menuItem.megaMenu ?\n                                    <ul\n                                        className={`${menuItem.active ? 'menu-open activeSubmenu' : ''}`}\n                                        style={menuItem.active ? { opacity: 1, transition: 'opacity 500ms ease-in' } : {}}\n                                    >\n                                        {menuItem.children.map((childrenItem, index) =>\n                                            <li key={index} className={`${childrenItem.children ? 'sub-menu ' : ''}`}>\n                                                {(childrenItem.type === 'sub') ?\n                                                    <a href={menuItem.link} onClick={() => toggletNavActive(childrenItem)} >\n                                                        {childrenItem.title}\n                                                    </a>\n                                                    : ''}\n                                                {(childrenItem.type === 'link') ?\n                                                    <Link href={`${childrenItem.path}`}>\n                                                        <a>    {childrenItem.title} </a>\n                                                    </Link>\n                                                    : ''}\n                                                {childrenItem.children ?\n                                                    <ul className={`${childrenItem.active ? 'menu-open activeSubmenu' : 'active'}`}>\n                                                        {childrenItem.children.map((childrenSubItem, key) =>\n                                                            <li key={key}>\n                                                                {(childrenSubItem.type === 'link') ?\n                                                                    <Link href={`${childrenSubItem.path}`} >\n                                                                        <a className=\"sub-menu-title\">{childrenSubItem.title}</a>\n                                                                    </Link>\n                                                                    : ''}\n                                                            </li>\n                                                        )}\n                                                    </ul>\n                                                    : ''}\n                                            </li>\n                                        )}\n                                    </ul>\n                                    : ''}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </div>\n    )\n}\n\nexport default Nav\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAEA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAMA;AAQA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAddA;AA+BA;AAKA;AACA;AACA;;;;;A","sourceRoot":""}